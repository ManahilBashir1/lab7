import 'package:flutter/material.dart';

void main() {
  runApp(const TimerApp());
}

class TimerApp extends StatelessWidget {
  const TimerApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Timer App',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: const TimerScreen(),
    );
  }
}

class TimerScreen extends StatefulWidget {
  const TimerScreen({super.key});

  @override
  _TimerScreenState createState() => _TimerScreenState();
}

class _TimerScreenState extends State<TimerScreen> {
  int _secondsRemaining = 60; // 1 minute countdown
  bool _isRunning = false;
  bool _isCompleted = false;

  Future<void> _startTimer() async {
    setState(() {
      _isRunning = true;
      _isCompleted = false;
    });

    while (_secondsRemaining > 0 && _isRunning) {
      await Future.delayed(const Duration(seconds: 1), () {
        if (_isRunning) {
          setState(() {
            _secondsRemaining--;
          });
        }
      });
    }

    if (_secondsRemaining == 0) {
      setState(() {
        _isCompleted = true;
        _isRunning = false;
      });
    }
  }

  void _stopTimer() {
    setState(() {
      _isRunning = false;
    });
  }

  void _resetTimer() {
    setState(() {
      _secondsRemaining = 60;
      _isRunning = false;
      _isCompleted = false;
    });
  }

  String _formatTime(int seconds) {
    int minutes = seconds ~/ 60;
    int remainingSeconds = seconds % 60;
    return '${minutes.toString().padLeft(2, '0')}:${remainingSeconds.toString().padLeft(2, '0')}';
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Timer App'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              _formatTime(_secondsRemaining),
              style: const TextStyle(
                fontSize: 72,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 40),
            if (_isCompleted)
              const Text(
                'Time is up!',
                style: TextStyle(
                  fontSize: 24,
                  color: Colors.green,
                ),
              ),
            const SizedBox(height: 40),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                if (!_isRunning && _secondsRemaining == 60)
                  ElevatedButton(
                    onPressed: _startTimer,
                    child: const Text('Start Timer'),
                  ),
                if (_isRunning)
                  ElevatedButton(
                    onPressed: _stopTimer,
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.red,
                    ),
                    child: const Text('Stop'),
                  ),
                if (!_isRunning && _secondsRemaining < 60)
                  ElevatedButton(
                    onPressed: _startTimer,
                    child: const Text('Resume'),
                  ),
                const SizedBox(width: 20),
                if (_secondsRemaining < 60)
                  ElevatedButton(
                    onPressed: _resetTimer,
                    child: const Text('Reset'),
                  ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}
